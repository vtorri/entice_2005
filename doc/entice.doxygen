/**
@file
@brief Entice Image Viewer

A handy, quick, themeable image viewer.
*/

/**

@mainpage Entice Developers and Themers Documentation
@image html entice.png

@version 1.0.0
@author Corey Donohoe <atmos@atmos.org>
@date 2003



<ul>
<li><a href="./index.html#intro">What is Entice?</a></li>
<li><a href="./index.html#running">How do I use it?</a>
<ul>
    <li><a href="./index.html#configops">Config File</a></li>
    <li><a href="./index.html#keyops">Binding Keys</a></li>
    <li><a href="./index.html#themes">Installing Themes</a></li>
</ul>
</li>
<li><a href="./index.html#theme">Themers documentation</a>
<ul>
    <li><a href="./index.html#theme_groups">Entice's Appearance: Edje Groups</a>
    <ul>
        <li><a href="./index.html#theme_entice_parts">The entice Group</a></li>
        <li><a href="./index.html#theme_entice_thumb_parts">The entice.thumb Group</a></li>
    </ul>
    </li>
    <li><a href="./index.html#theme_signals">Communicating with Entice : Edje Signals</a>
    <ul>
        <li><a href="./index.html#theme_entice_progs">Signals your theme can emit to Entice</a></li>
        <li><a href="./index.html#theme_entice_thumb_progs">Signals your thumbnails can emit to entice</a></li>
        <li><a href="./index.html#theme_entice_entice_progs">Signals your theme should be aware of</a></li>
    </ul>
    </li>
</ul>
</li>
<li><a href="./index.html#requirements">Build Instructions</a></li>
</ul>





@section intro What is Entice?

<p>Entice is yet another image viewer.  Why write another image viewer you
ask?  In the past entice was an application with tons of hard coded
effects.  These effects were very pleasing to the eye, but everyone's
entice application looked the same.</p>
@image html entice.jpg
<p> Enter Edje.  With Edje in mind most
of entice was rewritten from the ground up.  The applications
functionality was broken out, and Edje signals handle communication with the
theme so the displayed items stay current.  For the themer, communication
with entice is bidirectional, sometimes you'll have to emit signals to it,
while other times you'll have to be aware of signals entice is emitting and
act upon them in your theme.</p>


@section running How do I use entice now that I've got it installed ?

First, locate some images.
@subsection basicops How to load up images in entice.
Entice will take all of the command line arguments it is fed and try to
load them as image files.  Entice won't add the same file twice, and it
will only load images files.
@verbatim
$ entice ./Images/*
@endverbatim
Should open up a new entice window with the first image file you
specified on the command line preloaded.  Entice makes use of
Interprocess Communication(IPC) to send a list of files to an already
existing entice window if one is currently running.  What this means in
plain english is that entice is smart enough to know only to open one
instance of itself, and load all the images there.
@verbatim
$ entice ./Images2/*
@endverbatim
Would not open up a new window displaying the contents of ./Images2, but
instead it sends all of those files to the currently running instance of
entice silently adding them to the filelist.
@subsection configops Your entice config file
Your entice configuration database holds various things that entice
wants to keep track of between uses.  To look at the available values
try.
@verbatim
$ edb_gtk_ed ~/.e/apps/entice/config.db
@endverbatim

@subsection keyops How can I bind keys to signals in entice?
@verbatim
$ edb_gtk_ed ~/.e/apps/entice/config.db
@endverbatim

@subsection themes How can I install a theme I downloaded?
If you downloaded a theme called winter.eet copy it to your user theme
directory.
@verbatim
$ cp winter.eet ~/.e/apps/entice/themes/
@endverbatim

@section theme How do I theme for it ? (Edje Docs)

@subsection theme_groups Edje groups that makeup Entice
<ul>
<li>
<h2 id="theme_entice_parts">entice Group : Edje Parts</h2>
<span><em>Entice</em>: the main entice edje, fills the entire window</span>
    <ul>
    <li><em>entice.image.current.filename.full</em>:(TEXT) the full path to the file currently displayed</li>
    <li><em>entice.image.current.filename.short</em>:(TEXT) the filename currently displayed</li>
    <li><em>entice.image.current.filesize</em>:(TEXT) the size of the file currently displayed</li>
    <li><em>entice.image.current.dimensions</em>:(TEXT) Entice sets this string to be a string "w x h" where w is the width of the image and h is the height of the image.</li>
    <li><em>entice.image.current.height</em>:(TEXT) the height of the image currently displayed</li>
    <li><em>entice.image.current.width</em>:(TEXT) the width of the image currently displayed</li>
    <li><em>entice.image</em>:(RECT) When the image is actually loaded by entice, it looks for this region in the theme.  If it exists, the image is swallowed here.  If you want dragability, do not confine this part.</li>
    <li><em>entice.scroller</em>:(RECT) When the image displayed is larger than the area theme is giving it, a scroller window can appear.  Clicking in this window moves the viewport on displayed image so the clicked area is "centered"</li>
    <li><em>entice.preview</em>:(RECT) Thumbnails have the ability to request themselves to be "previewed".  This region swallows a copy of the thumbnail that requested previewing.</li>
    <li><em>entice.thumbnail.area</em>:(RECT) Entice contains a filelist, and the themer is allowed to create a region that that will contain a list of thumbnails.</li>
    </ul>
</li>
<li><h2 id="theme_entice_thumb_parts">entice.thumb Group : Edje Parts</h2>
<span><em>entice.thumb</em>:All the thumbnails take on this look</span>
    <ul>
        <li><em>entice.thumb</em>:(RECT) the decorations for thumbnails</li>
    </ul>
</li>
</ul>

@subsection theme_signals Communicating with Entice : Edje Signals
<ul>
    <li><h2 id="theme_entice_progs">entice Group : Edje Signals</h2>
    <span><em>Entice</em>: The themer can emit signals to ask for state changes in entice.  This includes things like telling Entice to "load the next image" or "delete this image from the filelist".</span>
    <ul>
        <li><em>entice,image,current,delete</em>:("") deletes the currently displayed image from the filelist, AND from disk</li>
        <li><em>entice,image,current,remove</em>:("") deletes the currently displayed image from the filelist</li>
        <li><em>entice,image,current,save</em>:("") save the currently modified image to disk</li>
        <li><em>entice,image,next</em>:("") load the next image in the filelist</li>
        <li><em>entice,image,prev</em>:("") load the previous image in the filelist</li>
        <li><em>entice,image,current,zoom,reset</em>:("") sets the image's zoom scale back to 1:1</li>
        <li><em>entice,image,current,zoom,fit</em>:("") fit the image in the specified area</li>
        <li><em>entice,image,current,zoom,in</em>:("") Zoom in on the image</li>
        <li><em>entice,image,current,zoom,out</em>:("") Zoom out on the image</li>
        <li><em>entice,image,current,zoom,in,focused</em>:("") Zoom in on the image, focused on the current mouse x,y(NOT IMPLEMENTED)</li>
        <li><em>entice,image,current,zoom,out,focused</em>:("") Zoom out on the image, focused on the current mouse x,y(NOT IMPLEMENTED)</li>
        <li><em>entice,image,current,rotate,right</em>:("") Rotates the current image 90 degrees clockwise</li>
        <li><em>entice,image,current,rotate,left</em>:("") Rotates the current image 90 degrees counter-clockwise</li>
        <li><em>entice,image,current,flip,horizontal</em>:("") Flip the current image horizontally</li>
        <li><em>entice,image,current,flip,vertical</em>:("") Flip the current image vertically</li>
        <li><em>entice,image,current,scroll,start,east</em>:("") start a timer to pan the image viewport image "East"</li>
        <li><em>entice,image,current,scroll,start,west</em>:("") start a timer to pan the image viewport image "West"</li>
        <li><em>entice,image,current,scroll,start,south</em>:("") start a timer to pan the image viewport image "South"</li>
        <li><em>entice,image,current,scroll,start,north</em>:("") start a timer to pan the image viewport image "North"</li>
        <li><em>entice,image,current,scroll,stop</em>:("") stops all image scrolling timers</li>
        <li><em>entice,image,current,edit</em>:("") try to edit the image with the config opt for editor</li>
        <li><em>entice,thumbnail,scroll,start,next</em>:("") start scrolling to see additional elements in in the thumbnail containers</li>
        <li><em>entice,thumbnail,scroll,start,prev</em>:("") start scrolling to see images before those currently displayed in the container </li>
        <li><em>entice,thumbnail,scroll,stop</em>:("") stops any thumbnail scrolling timers that are currently running.</li>
        <li><em>entice,fullscreen</em>:("") Tell Entice to takeover the entire screen and resize itself borderless.</li>
        <li><em>entice,quit</em>:("") Tell Entice it's time to exit</li>
        <li><em>entice,image,fit,window</em>:("") Not Impelemented</li>
    </ul>
</li>
<li>
<h2 id="theme_entice_thumb_progs">entice.thumb Group : Edje Signals</h2>
<span><em>entice.thumb</em>:All the thumbnails take on this look</span>
    <ul>
        <li><em>entice,thumb,preview</em>:("") Send this thumbnail to the previewer.  </li>
        <li><em>entice,thumb,load</em>:("") Load this thumbnail as the current image.  </li>
        <li><em>entice,thumb,previewing</em>:("") This thumbnail was selected in Entice.  </li>
        <li><em>entice,thumb,</em>:("") This thumbnail was de-selected in Entice.  </li>
        <li><em>entice,thumb,delete</em>:("") Delete this thumbnail from entice's filelist and from disk.</li>
        <li><em>entice,thumb,remove</em>:("") Remove this thumbnail from entice's filelist.</li>
        <li><em>entice,thumb,loaded</em>:("") This thumbnail is now the current image entice is viewing.</li>
        <li><em>entice,thumb,unloaded</em>:("") This thumbnail is no longer the current image entice is viewing.</li>
    </ul>
</li>
<li><h2 id="theme_entice_entice_progs">entice Group : Entice Signals</h2>
<span><em>Entice</em>:Signals your theme should trap that Entice will emit</span>
    <ul>
        <li><em>entice,image,display</em>:("") When a new image is displayed.  </li>
        <li><em>entice,image,display,before</em>:("") Right before the current image is freed, this is emitted.  This is useful for intercepting image display.  </li>
        <li><em>entice,image,modified</em>:("") When the image in memory is no longer consistent with the image on disk</li>
        <li><em>entice,preview,show</em>:("") When we have a new image in previewer.  </li>
        <li><em>entice,preview,show,before</em>:("") When we have a new image coming into the previewer, this is emitted right before the old preview is replaced with the new.  </li>
        <li><em>entice,image,current,edit,sent</em>:("") When we have successfully requested the file to be loaded in the editor.  </li>
    </ul>
</li>
</ul>

@section requirements What does Entice require?

Entice relies on a lot of libraries most notably
  - Edb (library)
  - Eet (library)
  - Imlib2 (library)
  - Imlib2_loaders (library)
  - Evas (library)
  - Ecore (library)
  - Embryo (library)
  - Edje (library)
  - Epeg (library)
  - Epsilon (library)
  - Esmart (library)

The following instructions assume you've checked out the e17 directory
from cvs.
@verbatim
$ cvs -d:pserver:anonymous@cvs.enlightenment.sf.net:/cvsroot/enligtenment login
$ cvs -d:pserver:anonymous@cvs.enlightenment.sf.net:/cvsroot/enligtenment \
co e17/libs/edb e17/libs/eet e17/libs/imlib2 e17/libs/imlib2_loaders \
e17/libs/evas e17/libs/ecore e17/libs/edje e17/libs/epeg e17/libs/epsilon \
e17/libs/esmart e17/apps/entice
@endverbatim

That should fetch all the libraries you'll need to run entice.

<ol>
<li>You need Edb from cvs
@verbatim
$  cd e17/libs/edb; ./autogen.sh; make; sudo make install
@endverbatim
</li>
<li>You need Eet from cvs
@verbatim
$  cd e17/libs/eet; ./autogen.sh; make; sudo make install
@endverbatim
<li>You need Imlib2 > 1.1.0
@verbatim
$  cd e17/libs/imlib2; ./autogen.sh; make; sudo make install
@endverbatim
</li>
<li>You need imlib2_loaders
@verbatim
$  cd e17/libs/imlib2_loaders; ./autogen.sh; make; sudo make install
@endverbatim
</li>
<li>You need Evas from cvs
@verbatim
$  cd e17/libs/evas; ./autogen.sh; make; sudo make install
@endverbatim
</li>
<li>You need Ecore from cvs
@verbatim
$  cd e17/libs/ecore; ./autogen.sh; make; sudo make install
@endverbatim
</li>
<li>You need Embryo from cvs
@verbatim
$  cd e17/libs/embryo; ./autogen.sh; make; sudo make install
@endverbatim
</li>
<li>You need Edje from cvs
@verbatim
$  cd e17/libs/edje; ./autogen.sh; make; sudo make install
@endverbatim
</li>
<li>You need Epeg from cvs
@verbatim
$  cd e17/libs/epeg; ./autogen.sh; make; sudo make install
@endverbatim
</li>
<li>You need Epsilon from cvs
@verbatim
$  cd e17/libs/epsilon; ./autogen.sh; make; sudo make install
@endverbatim
</li>
<li>You need Esmart from cvs
@verbatim
$  cd e17/libs/esmart; ./autogen.sh; make; sudo make install
@endverbatim
</li>
<li>You need entice from cvs
@verbatim
$  cd e17/apps/entice; ./autogen.sh; make; sudo make install
@endverbatim
</li>
</ol>



@todo
<ul>
<li>Theme walkthrough</li>
<li>URL(curl/wget) loading</li>
<li>dragable for container scroll offset</li>
<li>gallery support</li>
<li>(esmart/ewl) file dialog</li>
<li>XDND support</li>
<li>file change notification(reload main image, not just thumbnail)</li>
<li>migrate to ecore_config</li>
</ul>

*/
