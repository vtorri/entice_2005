#include "images.edc"
fonts {
    font, "Vera.ttf" "Edje.Vera";
    font, "VeraIt.ttf" "Edje.VeraI";
}

data {
    item, "container_layout" "entice";
}
#include "macros/slider.edc"
#include "macros/exifpanel.edc"

collections
{
    group
    {
	name, "entice";
	min, 480 360;
	max, 99999 9999;
	data {
	    item, "entice.window.dragable" "false";
#include "hashes/exif.edc"
	}
#include "embryo/globals.edc"
	parts
	{
	    part
	    {
		name, "bg";
		type, IMAGE;
		mouse_events, 1;
		repeat_events, 1;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 0 0;
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
		    }
		    image 
		    {
			normal, "bg.png";
		    }
		    fill
		    {
			smooth, 0;
			size {
			    relative, 0.0 0.0;
			    offset, 128 128;
			}
		    }
		}
		description
		{
		    state, "fullscreen" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 0 0;
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
		    }
		    image 
		    {
			normal, "bg.png";
		    }
		    fill
		    {
			smooth, 0;
			size {
			    relative, 0.0 0.0;
			    offset, 128 128;
			}
		    }
		    color: 255 255 255 92;
		}
	    }
#include "parts/enticeimagescroller.edc"
#include "parts/enticeimage.edc"
#include "parts/buttons.edc"
#include "parts/tooltip.edc"
#include "parts/bg.edc"
#include "parts/delete_dialog.edc"
#include "parts/enticeimagepreview.edc"
#include "parts/panel.edc"
#include "parts/status.edc"
#include "parts/exifpanel.edc"
	}
	programs
	{
#include "programs/bg.edc"
#include "programs/panel.edc"
#include "programs/buttons.edc"
#include "programs/panning.edc"
#include "programs/slideshow.edc"
#include "programs/tooltip.edc"
#include "programs/enticeimage.edc"
#include "programs/delete_dialog.edc"
#include "programs/status.edc"
#include "programs/enticepreview.edc"
#include "programs/exifpanel.edc"
	    program {
		name: "initialize_embryo_vars";
		signal: "load";
		source: "";
		script {
		    set_int(is_fullscreen, 0);
		    set_int(is_first_image, 1);
		}
	    }
	    program {
		name: "fit_on_first_image";
		signal: "entice,image,display,before";
		source: "";
		script {
		    if(get_int(is_first_image) == 1)
		    {
			emit("entice,image,current,zoom,fit", "");
			set_int(is_first_image, 0);
		    }
		}
	    }
	}
    }
    group
    {
	name, "entice.thumb";
	parts
	{
#include "parts/enticethumb_group.edc"
	}
	programs
	{
#include "programs/enticethumb_group.edc"
	}
    }
    group
    {
	name, "entice.scroller";
	parts
	{
	    part
	    {
		name, "EnticeImagePosition";
		type, RECT;
		mouse_events, 0;
		description
		{
		    state, "default" 0.0;
		    visible, 0;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 0 0;
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
		    }
		}
	    }
	}
    }
}
